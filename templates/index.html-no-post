{% extends "base.html" %}

{% block content %}
<div class="container mx-auto px-4 py-8">
    <h1 class="text-4xl font-bold mb-8 text-center text-gray-800 bg-clip-text text-transparent bg-gradient-to-r from-blue-500 to-purple-500">Welcome to ByteBin</h1>
    
    <!-- Your existing content for creating new pastes -->
    <!-- ... -->

    <div class="mt-12">
        <h2 class="text-2xl font-bold mb-4 text-gray-700">Recent Neural Activations</h2>
        
        <div class="mb-8">
            <h3 class="text-xl font-bold mb-4 text-gray-700">Filter Synapses:</h3>
            <div class="flex flex-wrap gap-2 bg-gray-900 p-4 rounded-lg shadow-inner">
                <a href="{{ url_for('index') }}" class="bg-blue-500 text-white px-4 py-2 rounded-full hover:bg-blue-600 transition duration-300 ease-in-out transform hover:scale-105">All Synapses</a>
                {% if tags %}
                    {% for tag in tags %}
                    <a href="{{ url_for('index', tag=tag.name) }}" class="bg-gray-700 text-gray-200 px-4 py-2 rounded-full hover:bg-gray-600 transition duration-300 ease-in-out transform hover:scale-105">{{ tag.name }}</a>
                    {% endfor %}
                {% endif %}
            </div>
        </div>

        {% if contents %}
        <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">
            {% for content in contents %}
            <div class="bg-gray-900 rounded-lg shadow-lg overflow-hidden transform transition duration-500 hover:scale-105">
                <div class="p-6">
                    <div class="mb-4 flex justify-between items-center">
                        <span class="text-blue-400 font-semibold">{{ content.content_type|default('Unknown')|capitalize }} Node</span>
                        <span class="text-gray-400 text-sm" title="{{ content.created_at.strftime('%Y-%m-%d %H:%M') if content.created_at else '' }}">
                            {{ content.created_at|time_ago if content.created_at else 'Unknown time' }}
                        </span>
                    </div>
                    <div class="mb-4">
                        {% if content.content_type == 'text' %}
                            <p class="text-gray-300 line-clamp-3">{{ content.content[:150]|default('No content available') }}...</p>
                        {% elif content.content_type == 'image' %}
                            <img src="{{ url_for('raw_content', short_url=content.short_url) }}" alt="Image preview" class="w-full h-48 object-cover rounded">
                        {% elif content.content_type == 'video' %}
                            <video src="{{ url_for('raw_content', short_url=content.short_url) }}" class="w-full h-48 object-cover rounded" controls>
                                Your browser does not support the video tag.
                            </video>
                        {% else %}
                            <p class="text-gray-300">Unknown content type</p>
                        {% endif %}
                    </div>
                    <div class="mb-4">
                        {% if content.tags %}
                            {% for tag in content.tags %}
                            <span class="inline-block bg-gray-800 rounded-full px-3 py-1 text-sm font-semibold text-blue-400 mr-2 mb-2">#{{ tag.name }}</span>
                            {% endfor %}
                        {% else %}
                            <span class="text-gray-400">No tags</span>
                        {% endif %}
                    </div>
                    <div class="flex items-center space-x-2 bg-gray-800 rounded-lg p-2" id="url-container-{{ content.id }}">
                        <a href="{{ url_for('view_content', short_url=content.short_url) }}" class="flex-grow text-blue-400 hover:text-blue-300 transition duration-300 truncate">
                            <span class="mr-2 text-gray-500">{{ request.host_url }}</span>{{ content.short_url }}
                        </a>
                        <button class="copy-url-btn bg-gray-700 hover:bg-blue-600 rounded-full p-2 transition duration-300 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-opacity-50" data-url="{{ request.host_url }}{{ content.short_url }}">
                            <i data-feather="copy" class="text-gray-300 w-4 h-4"></i>
                        </button>
                    </div>
                </div>
            </div>
            {% endfor %}
        </div>
        {% else %}
        <p class="text-gray-600 text-center">No recent activations found.</p>
        {% endif %}
    </div>
</div>
{% endblock %}

{% block scripts %}
{{ super() }}
<script>
    document.addEventListener('DOMContentLoaded', (event) => {
        const copyButtons = document.querySelectorAll('.copy-url-btn');
        copyButtons.forEach(button => {
            button.addEventListener('click', () => {
                const url = button.dataset.url;
                navigator.clipboard.writeText(url).then(() => {
                    const icon = button.querySelector('i');
                    icon.setAttribute('data-feather', 'check');
                    button.classList.add('bg-green-600');
                    feather.replace();
                    setTimeout(() => {
                        icon.setAttribute('data-feather', 'copy');
                        button.classList.remove('bg-green-600');
                        feather.replace();
                    }, 2000);
                });
            });
        });
    });

    function updateTimes() {
        const timeElements = document.querySelectorAll('.text-gray-400.text-sm[title]');
        timeElements.forEach(el => {
            const dateStr = el.title;
            if (!dateStr) return;
            
            const date = new Date(dateStr);
            const now = new Date();
            const diff = Math.floor((now - date) / 1000); // difference in seconds

            let timeAgo;
            if (diff < 60) timeAgo = 'just now';
            else if (diff < 3600) timeAgo = Math.floor(diff / 60) + ' minute' + (Math.floor(diff / 60) > 1 ? 's' : '') + ' ago';
            else if (diff < 86400) timeAgo = Math.floor(diff / 3600) + ' hour' + (Math.floor(diff / 3600) > 1 ? 's' : '') + ' ago';
            else if (diff < 2592000) timeAgo = Math.floor(diff / 86400) + ' day' + (Math.floor(diff / 86400) > 1 ? 's' : '') + ' ago';
            else if (diff < 31536000) timeAgo = Math.floor(diff / 2592000) + ' month' + (Math.floor(diff / 2592000) > 1 ? 's' : '') + ' ago';
            else timeAgo = Math.floor(diff / 31536000) + ' year' + (Math.floor(diff / 31536000) > 1 ? 's' : '') + ' ago';

            el.textContent = timeAgo;
        });
    }

    // Update times immediately and then every minute
    updateTimes();
    setInterval(updateTimes, 60000);
</script>
{% endblock %}